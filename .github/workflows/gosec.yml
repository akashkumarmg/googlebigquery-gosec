name: GoSec Diff-Aware Scan

on:
  pull_request:
    branches:
      - main

permissions:
  pull-requests: write
  contents: read

jobs:
  gosec-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch with full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Fetch main branch
        run: git fetch origin main

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      # --- Baseline Scan on main ---
      - name: Checkout main branch for baseline scan
        run: git checkout origin/main

      - name: Run GoSec on main (baseline)
        uses: securego/gosec-action@v2
        with:
          args: '-no-fail -fmt=json -out baseline-results.json ./...'

      - name: Display GoSec on main (baseline) JSON Output
        run: |
          echo "Displaying raw GoSec results..."
          cat baseline-results.json | jq '.Issues'

      # --- Restore PR branch ---
      - name: Checkout PR branch again
        run: git checkout ${{ github.head_ref }}

      # --- Find changed Go files ---
      - name: Get changed Go files
        id: changes
        run: |
          CHANGED=$(git diff --name-only origin/main...HEAD | grep '\.go$' || true)
          echo "Changed files: $CHANGED"
          echo "files=$CHANGED" >> $GITHUB_OUTPUT

      # --- Run GoSec on changed files only ---
      - name: Run GoSec on changed files
        if: steps.changes.outputs.files != ''
        uses: securego/gosec-action@v2
        with:
          args: '-no-fail -fmt=json -out changed-results.json ${{ steps.changes.outputs.files }}'

      - name: Display GoSec on PR JSON Output
        run: |
          echo "Displaying raw GoSec results..."
          cat changed-results.json | jq '.Issues'

      # --- Comment on PR with changed files results ---
      - name: Comment PR with findings (GitHub API)
        if: steps.changes.outputs.files != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COUNT=$(jq '.Issues | length' changed-results.json)
          if [ "$COUNT" -eq 0 ]; then
            BODY="✅ No GoSec issues found in changed files."
          else
            BODY="⚠️ *GoSec found $COUNT high-severity issue(s) in changed files:*\n\n\`\`\`json\n$(jq '.' changed-results.json)\n\`\`\`"
          fi

          PAYLOAD=$(jq -n --arg body "$BODY" '{body: $body}')

          curl -sSL \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -X POST \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            -d "$PAYLOAD"
